#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int next_permutation(int n, char **s)
{
	/**
	* Complete this method
	* Return 0 when there is no next permutation and 1 otherwise
	* Modify array s to its next permutation
	*/
    int k = -1;
    int start, end;
    char *temp;
    
    //find largest index where value is less than next value
    for(int i = n - 2; i >= 0; i--){
        if(strcmp(s[i], s[i+1]) < 0) {
            k = i;
            break;
        }
    }
    //if no index found, then there is no next permutation
    if(k == -1){
        return 0;
    }
    
    //find value of index l, swap s[k] and s[l] when found
    for(int l = n-1; l > k; l--) {
        if(strcmp(s[k],s[l]) <  0){
            temp = s[k];
            s[k] = s[l];
            s[l] = temp;
            //reverse array from index k + 1 to n
            start = k + 1;
            end = n - 1;
            while(start < end) {
                temp = s[start];
                s[start] = s[end];
                s[end] = temp;
                start++;
                end--;
            }
            break;
        }
    }
    
    return 1;
}

int main()
{
	char **s;
	int n;
	scanf("%d", &n);
	s = calloc(n, sizeof(char*));
	for (int i = 0; i < n; i++)
	{
		s[i] = calloc(11, sizeof(char));
		scanf("%s", s[i]);
	}
	do
	{
		for (int i = 0; i < n; i++)
			printf("%s%c", s[i], i == n - 1 ? '\n' : ' ');
	} while (next_permutation(n, s));
	for (int i = 0; i < n; i++)
		free(s[i]);
	free(s);
	return 0;
}
