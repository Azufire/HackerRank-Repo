import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.PriorityQueue;
import java.util.Comparator;

/*
 * Create the Student and Priorities classes here.
 */
class Student {
    private int id;
    private String name;
    private double cgpa;
    
    public Student(int id, String name, double cgpa) {
        this.id = id;
        this.name = name;
        this.cgpa = cgpa;
    }
    public int getID() {return this.id;}
    public String getName() {return this.name;}
    public double getCGPA() {return this.cgpa;}   
}

class Priorities {
    public List<Student> getStudents(List<String> events) {
        List<Student> results = new ArrayList<>();
        //comparator for comparing students by CGPA -> name -> ID
        Comparator<Student> sComp = Comparator.comparing(Student::getCGPA).reversed()
            .thenComparing(Student::getName).thenComparing(Student::getID);
        //priority queue for ordering
        PriorityQueue<Student> PQ = new PriorityQueue<>(sComp);
        
        for(String event: events){
            //served event
            if(event.equals("SERVED")){
                PQ.poll();
            }
            //enter event
            else {
                String[] sData = event.split(" ");
                int id = Integer.parseInt(sData[3]);
                double cgpa = Double.parseDouble(sData[2]);
                Student newStudent = new Student(id, sData[1], cgpa);
                PQ.add(newStudent);
            }
        }
        while(!PQ.isEmpty()){
            results.add(PQ.poll());
        }
        return results;
    }
}

public class Solution {
    private final static Scanner scan = new Scanner(System.in);
    private final static Priorities priorities = new Priorities();
    
    public static void main(String[] args) {
        int totalEvents = Integer.parseInt(scan.nextLine());    
        List<String> events = new ArrayList<>();
        
        while (totalEvents-- != 0) {
            String event = scan.nextLine();
            events.add(event);
        }
        
        List<Student> students = priorities.getStudents(events);
        
        if (students.isEmpty()) {
            System.out.println("EMPTY");
        } else {
            for (Student st: students) {
                System.out.println(st.getName());
            }
        }
    }
}
